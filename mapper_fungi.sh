#!/bin/bash
set -e
#########################################################
#	SCRIPT TO FILTER fungi FUNGI USING BOWTIE2 MAPPING	#
#########################################################
# Arguments:
# $1 = fungiDB. File with the reference genome for the mapping. Contains the references.
# $2 = sampleName. Name of the sample to be processed. Must match the name of the sample in the RAW directory.
# 1. Creates necessary directories. 
# 2. Maps against fungi reference genome.
# 3. Creates .fastq files using the host-free files generated by host_removal.sh
# Output files: (In ANALYSIS/sampleName/05.FUNGI/)
# sampleName_xx_fungi_mapped.sam: SAM file from mapping the processed files against xx reference genome.
# sampleName_xx_fungi_R1.fastq: .fastq file with R1 reads that mapped the fungi xx DB.
# sampleName_xx_fungi_R2.fastq: .fastq file with R2 reads that mapped the fungietria xx DB.
# sampleName_xx_fungi_mapping.log: .log file with a log of the mapping of xx DB.

function map_fungi {
#	GET ARGUMENTS
fungiDB=$1  
sampleAnalysisDir=$2
#	INITIALIZE VARIABLES
#		Directories
sampleName=$(basename "${sampleAnalysisDir}")
fungiITSDB="${fungiDB}ITS/bwt2/ITS_all"
fungiWGDB="${fungiDB}WG/bwt2/fungi_all"
fungiFilesDir="${sampleAnalysisDir}/05.FUNGI/" #directory where the files will we saved (sam for mapping and fastq for mapped samples)
noHostDir="${sampleAnalysisDir}/02.HOST/" #directory where the host free samples are located
#		Input Files
noHostR1Fastq="${noHostDir}${sampleName}_noHost_R1.fastq" #R1 host free file
noHostR2Fastq="${noHostDir}${sampleName}_noHost_R2.fastq" #R2 host free file
#		OutputFiles: ITS
mappedSamITSFile="${fungiFilesDir}${sampleName}_fungi_mapped_ITS.sam" #bowtie sam file with the reads that mapped against the ITS reference
mappedBamITSFile="${fungiFilesDir}${sampleName}_fungi_mapped_ITS.bam" #bowtie bam file with the reads that mapped against the ITS reference
bowtie2logFileITS="${fungiFilesDir}${sampleName}_ITS_fungi_mapping.log" #log of the mapping against the ITS reference
fungiMappedR1ITSFastq="${fungiFilesDir}${sampleName}_ITS_fungi_R1.fastq" #file with the R1 reads which mapped against ITS reference
fungiMappedR2ITSFastq="${fungiFilesDir}${sampleName}_ITS_fungi_R2.fastq" #file with the R2 reads which mapped against the ITS reference
#		OutputFiles: Whole Genome (WG)
mappedSamWGFile="${fungiFilesDir}${sampleName}_WG_fungi_mapped.sam" #bowtie sam file with the reads that mapped against the WG reference
mappedBamWGFile="${fungiFilesDir}${sampleName}_WG_fungi_mapped.bam" #bowtie bam file with the reads that mapped against the WG reference
bowtie2logFileWG="${fungiFilesDir}${sampleName}_WG_fungi_mapping.log" #log of the mapping against the WG reference  
fungiMappedR1WGFastq="${fungiFilesDir}${sampleName}_WG_fungi_R1.fastq" #file with the R1 reads that mapped against the WG reference
fungiMappedR2WGFastq="${fungiFilesDir}${sampleName}_WG_fungi_R2.fastq" #file with the R2 reads that mapped against the WG reference


echo -e "$(date)" 
echo -e "*********** MAPPING fungi IN $sampleName ************"

#	CREATE DIRECTORY FOR THE SAMPLE IF NECESSARY
if [ ! -d ${fungiFilesDir} ]
then
	mkdir -p $fungiFilesDir
	echo -e "${fungiFilesDir} created"
fi
################################################################################################	
#	BOWTIE2 MAPPING AGAINST fungi ITS	
echo -e "--------Bowtie2 is mapping against the ITS reference ....------"
echo -e "$(date)\t Start mapping ${sampleName} to ITS reference \n" > $bowtie2logFileITS
echo -e "The command is: ### bowtie2 -fr -x "$fungiITSDB" -q -1 $noHostR1Fastq -2 $noHostR2Fastq -S $mappedSamITSFile ###\n" >> $bowtie2logFileITS 
bowtie2 -fr -x "$fungiITSDB" -q -1 $noHostR1Fastq -2 $noHostR2Fastq -S $mappedSamITSFile 2>&1 | tee -a $bowtie2logFileITS
echo -e "$(date)\t Finished mapping ${sampleName} against ITS reference \n" >> $bowtie2logFileITS
echo -e "$(date)\t Converting SAM to BAM of ${sampleName} \n" >> $bowtie2logFileITS
samtools view -Sb $mappedSamITSFile > $mappedBamITSFile
rm $mappedSamITSFile
echo -e "$(date)\t Finished converting SAM to BAM of ${sampleName} \n" >> $bowtie2logFileITS

#	SEPARATE AND EXTRACT R1 AND R2 READS MAPPED TO ITS 
echo -e "----------------- Filtering fungi reads that mapped to ITS ...---------------------"
echo -e "$(date)\t Start filtering ${sampleName} reads that mapped to ITS \n" >> $bowtie2logFileITS
echo -e "The command is: ###samtools view -F 0x40 $mappedBamITSFile | awk '{if($3 != '*') print '@' $1 '\\n' $10 '\\n' '+' '\\n' $11}' > $fungiMappedR1ITSFastq" >> $bowtie2logFileITS
samtools view -F 0x40 $mappedBamITSFile | awk '{if($3 != "*") print "@" $1 "\n" $10 "\n" "+" $1 "\n" $11}' > $fungiMappedR1ITSFastq
echo -e "The command is: ###samtools view -f 0x40 $mappedSamITSFile | awk '{if($3 != '*') print '@' $1 '\\n' $10 '\\n' '-' '\\n' $11}' > $fungiMappedR2ITSFastq" >> $bowtie2logFileITS
samtools view -f 0x40 $mappedBamITSFile | awk '{if($3 != "*") print "@" $1 "\n" $10 "\n" "+" $1 "\n" $11}' > $fungiMappedR2ITSFastq
#	samtools separates R1 (-F) or R2 (-f) reads using the mapped SAM file and awk filters those mapped (=!"*") in fastq format
echo -e "$(date)\t Finished filtering ${sampleName} reads that mapped to ITS \n" >> $bowtie2logFileITS

################################################################################################	
#	BOWTIE2 MAPPING AGAINST fungi WG	
echo -e "--------Bowtie2 is mapping against fungi WG reference ....------"
echo -e "$(date)\t Start mapping ${sampleName} reads to fungi WG reference \n" > $bowtie2logFileWG
echo -e "The command is: ### bowtie2 -fr -x "$fungiWGDB" -q -1 $noHostR1Fastq -2 $noHostR2Fastq -S $mappedSamWGFile ###\n" >> $bowtie2logFileWG 
bowtie2 -fr -x "$fungiWGDB" -q -1 $noHostR1Fastq -2 $noHostR2Fastq -S $mappedSamWGFile 2>&1 | tee -a $bowtie2logFileWG
echo -e "$(date)\t Finished mapping ${sampleName} reads to fungi WG reference \n" >> $bowtie2logFileWG
echo -e "$(date)\t Converting SAM to BAM of ${sampleName} \n" >> $bowtie2logFileWG
samtools view -Sb $mappedSamWGFile > $mappedBamWGFile
rm $mappedSamWGFile
echo -e "$(date)\t Finished converting SAM to BAM of ${sampleName} \n" >> $bowtie2logFileWG

#	SEPARATE AND EXTRACT R1 AND R2 READS MAPPED TO WG 
echo -e "----------------- Filtering fungi reads that mapped to fungi WG reference ...---------------------"
echo -e "$(date)\t Start filtering ${sampleName} reads that mapped to fungi WG \n" >> $bowtie2logFileWG
echo -e "The command is: ###samtools view -F 0x40 $mappedBamWGFile | awk '{if(\$3 != '*') print '@' \$1 '\\n' \$10 '\\n' '+' '\\n' \$11}' > $fungiMappedR1WGFastq" >> $bowtie2logFileWG
samtools view -F 0x40 $mappedBamWGFile | awk '{if($3 != "*") print "@" $1 "\n" $10 "\n" "+" $1 "\n" $11}' > $fungiMappedR1WGFastq
echo -e "The command is: ###samtools view -f 0x40 $mappedBamWGFile | awk '{if(\$3 != '*') print '@' \$1 '\\n' \$10 '\\n' '+' '\\n' \$11}' > $fungiMappedR2WGFastq" >> $bowtie2logFileWG
samtools view -f 0x40 $mappedBamWGFile | awk '{if($3 != "*") print "@" $1 "\n" $10 "\n" "+" $1 "\n" $11}' > $fungiMappedR2WGFastq
#	samtools separates R1 (-F) or R2 (-f) reads using the mapped SAM file and awk filters those mapped (=!"*") in fastq format
echo -e "$(date)\t Finished filtering ${sampleName} reads that mapped to fungi WG reference \n" >> $bowtie2logFileWG

################################################################################################	
echo -e "$(date)" 
echo -e "*********** FINISHED MAPPING fungi IN $sampleName ************"
}

#module load samtools/samtools-1.2
#map_fungi /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/FUNGI_GENOME_REFERENCE/ /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/ANALYSIS/MuestraPrueba/
