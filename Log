
31-05-16
- Download the following datasets:
 http://www.ncbi.nlm.nih.gov/sra/?term=SRR2130126 Various Pathogens
 http://www.ncbi.nlm.nih.gov/sra/?term=SRR453448 Dengue
 http://www.ncbi.nlm.nih.gov/sra/?term=SRR453458 Hepatitis A. 
 http://www.ncbi.nlm.nih.gov/sra/?term=SRR1106123 Hepatitis C y G
Download from SRA using the following command:
fastq-dump --split-files SRR2130126
This is downloads NGS (Illumina) files (2, one per strand, as it is paired end)

1-06-2016
Run Trimmomatic (v0.33) for the downloads in paired end mode with parameters:
ILLUMINACLIP:TruSeq3-PE.fa:2:30:10 
SLIDINGWINDOW:4:20 (window of 4 nt, if avergae is below 20 it is cut)
MINLEN:70 (min length of read of 70 (reads are 150 nt)

Create .py file to run trimmomatic automatically on several fastq files for several samples (/ANALYSIS/SRC/Trimmomatic.py).

Review Pathosphere CUPP (.sh) code

2-06-2016

Get gist of Pythosphere scripts. The thing is not completely uploaded, the only available modules are for preprocessing (CUPP and Tax). 
I have downloaded VIP as alternative. 
I have to get a list of the dependencies and see which ones are not installed. 
Also, I have to change the path to those already installed on the vip script.

3-06-2016
List of dependencies for VIP
- Bowtie2 (mapper)
- velvet (assembly)
- picard-tools (variant-calling)
- mafft
- ete2: 
    -python-numpy
    -python-qt4
    -python-lxml
    -https://bootstrap.pypa.io/get-pip.py
    -correr get-pip-py
    -sudo -H pip install --upgrade ete2
- pandas
    - sudo -H pip install --upgrade pandas

8-06-2016
- Run trimmomatic and skewer on the same file (SRR1106548_1.fastq, plasma_HIV).
Skewer: skewer -x /opt/Trimmomatic-0.33/adapters/TruSeq3-PE.fa $HOME/Documents/20160530_METAGENOMICS_AR_IC_T/RAW/Plasma_HIV/SRR1106548_1.fastq -o $HOME/Documents/20160530_METAGENOMICS_AR_IC_T/ANALYSIS/PREPROCESSING/SKEWER/PlasmaHIV_TruSeq3-PEAdapter
Trimmomatic: java -jar /opt/Trimmomatic/trimmomatic-0.33.jar PE Plasma_HIV/SRR1106548_1-trimmed-pair1.fastq Plasma_HIV/SRR1106548_2.fastq /home/arubio/Documents/20160530_METAGENOMICS_AR_IC_T/ANALYSIS/PREPROCESSING/TRIMMOMATIC/Plasma_HIV_output_forward_paired.fastq /home/arubio/Documents/20160530_METAGENOMICS_AR_IC_T/ANALYSIS/PREPROCESSING/TRIMMOMATIC/Plasma_HIV_output_forward_unpaired.fastq /home/arubio/Documents/20160530_METAGENOMICS_AR_IC_T/ANALYSIS/PREPROCESSING/TRIMMOMATIC/Plasma_HIV_output_reverse_paired.fastq /home/arubio/Documents/20160530_METAGENOMICS_AR_IC_T/ANALYSIS/PREPROCESSING/TRIMMOMATIC/Plasma_HIV_output_reverse_unpaired.fastq ILLUMINACLIP:/opt/Trimmomatic/adapters/TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:20 MINLEN:70
- Compare results with fastqc. Both have similar results, as the show the following seq overrepresented:
GGCAGCCATCTGGCCTAATACTGACGCTGAGGTACGAAAGCATGGGGAGC
CGCCATCGGTATTCCTCCAGATCTCTACGCATTTCACCGCTACACCTGGA
GTTGCAAAACTAGCGGATGAGCTGTGGATAGGGGTGAAAGGCTAAACAAA
I run a BLAST of the three. The first two seem to be 16S ribosomal sequences, and the third 23S ribosomal seq.
Trimmomatic has a fourth overrepresented sequence:
GTTGAAAAGTTAGGGGATGAGCTGTGGATAGGGGTGAAAGGCTAAACAAA 
which shows up in BLAST in multiple bacteria from different species and genus of betaproteobacteria. 
Paso a mapear contra el genoma de humano. Para ello tengo que descargarlo, utilizo el GRHc38.

9-06-2016
Descargo el genoma de referencia hg38 desde http://hgdownload.cse.ucsc.edu/goldenPath/hg38/bigZips/analysisSet/ (En RAW/HUMAN_GENOMEGRHC38/hg38.analysisSet.2bit)
Descargo el archivo 2bit (un solo archivo con todo el genoma, frente a los gz que está dividido en varios). 
Descargo el programa twobittofasta para convertir de 2bit a fasta.(En RAW/HUMAN_GENOMEGRHC38/hg38.analysisSet.fa)
Con bowtie2-build (bowtie 2.2.5) creo la base de datos de referencia para mapear mis secuencias preprocesadas (En REFERENCES/hg38.AnalysisSet/)
con bowtie2
Mapeo la muestra de HIV forward (sacada de trimmomatic) contra humano con bowtie2:
bowtie2 -x REFERENCES/hg38.AnalysisSet/ -r ANALYSIS/PREPROCESSING/TRIMMOMATIC/Plasma_HIV_output_forward_paired.fastq -S ANALYSIS/HOST_REMOVAL/Plasma_HIV/aligned.sam -f 
-x: indica dónde está el genoma de referencia preparado anteriormente
-S: indica que el formato de salida será SAM
-f: formato de entrada del archivo de FASTA
Una vez mapeado debemos sustraer los fragmentos que corresponden a humano. Bowtie devuelve un archivo SAM en el siguiente formato:
*1. Name of read that aligned. Note that the SAM specification disallows whitespace in the read name. 
If the read name contains any whitespace characters, Bowtie 2 will truncate the name at the first whitespace character. 
2. Sum of all applicable flags. Flags relevant to Bowtie are:
  1. The read is one of a pair
  2. The alignment is one end of a proper paired-end alignment
  4. The read has no reported alignments
  8. The read is one of a pair and has no reported alignments
  16. The alignment is to the reverse reference strand
  32. The other mate in the paired-end alignment is aligned to the reverse reference strand
  64. The read is mate 1 in a pair
  128.The read is mate 2 in a pair
Thus, an unpaired read that aligns to the reverse reference strand will have flag 16. 
A paired-end read that aligns and is the first mate in the pair will have flag 83 (= 64 + 16 + 2 + 1).
3. Name of reference sequence where alignment occurs
4. 1-based offset into the forward reference strand where leftmost character of the alignment occurs
5. Mapping quality
6. CIGAR string representation of alignment
7. Name of reference sequence where mate's alignment occurs. Set to = if the mate's reference sequence is the same as this alignment's, 
or * if there is no mate.
8. 1-based offset into the forward reference strand where leftmost character of the mate's alignment occurs. Offset is 0 if there is no mate.
9. Inferred fragment length. Size is negative if the mate's alignment occurs upstream of this alignment. Size is 0 if the mates did not align concordantly. However, size is non-0 if the mates aligned discordantly to the same chromosome.
*10. Read sequence (reverse-complemented if aligned to the reverse strand)
*11. ASCII-encoded read qualities (reverse-complemented if the read aligned to the reverse strand). The encoded quality values are on the Phred quality scale and the encoding is ASCII-offset by 33 (ASCII char !), similarly to a FASTQ file.
12. Optional fields. Fields are tab-separated. bowtie2 outputs zero or more of these optional fields for each alignment, depending on the type of the alignment:
  AS:i:<N> Alignment score. Can be negative. Can be greater than 0 in --local mode (but not in --end-to-end mode). Only present if SAM record is for an aligned read.
  XS:i:<N> Alignment score for the best-scoring alignment found other than the alignment reported. Can be negative. Can be greater than 0 in --local mode (but not in --end-to-end mode). Only present if the SAM record is for an aligned read and more than one alignment was found for the read. Note that, when the read is part of a concordantly-aligned pair, this score could be greater than AS:i.
  YS:i:<N> Alignment score for opposite mate in the paired-end alignment. Only present if the SAM record is for a read that aligned as part of a paired-end alignment.
  XN:i:<N> The number of ambiguous bases in the reference covering this alignment. Only present if SAM record is for an aligned read.
  XM:i:<N> The number of mismatches in the alignment. Only present if SAM record is for an aligned read.
  XO:i:<N> The number of gap opens, for both read and reference gaps, in the alignment. Only present if SAM record is for an aligned read.
  XG:i:<N> The number of gap extensions, for both read and reference gaps, in the alignment. Only present if SAM record is for an aligned read.
  NM:i:<N> The edit distance; that is, the minimal number of one-nucleotide edits (substitutions, insertions and deletions) needed to transform the read string into the reference string. Only present if SAM record is for an aligned read.
  YF:Z:<S> String indicating reason why the read was filtered out. See also: Filtering. Only appears for reads that were filtered out.
  YT:Z:<S> Value of UU indicates the read was not part of a pair. Value of CP indicates the read was part of a pair and the pair aligned concordantly. Value of DP indicates the read was part of a pair and the pair aligned discordantly. Value of UP indicates the read was part of a pair but the pair failed to aligned either concordantly or discordantly. Filtering: #filtering
  MD:Z:<S> A string representation of the mismatched reference bases in the alignment. See SAM format specification for details. Only present if SAM record is for an aligned read. 

* Se guardan en el archivo no_Host.fastq
10-06-2016
Creo un script que mapea con bowtie todos los archivos que se encuentren en un directorio. La estructura de archivos debe ser:
Directorio/Muestra1/Muestra1_output_forward_paired.fastq
Directorio/Muestra1/Muestra1_output_reverse_paired.fastq
Directorio/Muestra2/Muestra2_output_forward_paired.fastq
Directorio/Muestra2/Muestra2_output_reverse_paired.fastq
...
Con esa sintaxis. Generará una carpeta por muestra dentro de ANALYSIS/HOST_REMOVAL que contendrá el sam del mapeado, el fastq
con los reads una vez filtrado el host y un log igual al que genera bowtie por consola.
El script está en ANALYSIS/SRC/host_removal.sh


13-06-2016
Descargo las bases de datos de humano, bacteria y virus con el script de VIP (TMP/VIP-master/installer/db_installer.sh)
en REFERENCES/VIP_DB.
Instalo velvet, oases en /opt.
Instalo mafft
Intstalo ete2:
sudo yum install PyQt4.x86_64 numpy.x86_64 python-lxml.x86_64 python-six.noarch
pip install --upgrade ete3
Instalo pandas
Cuando descargue la BD correré para mapear contra la bd de virus. 
Me descargo de ftp://ftp.ncbi.nih.gov/genomes/Viruses/ Bajo el archivo all.fna.tar.gz (fna=fasta)
Descargo la base de datos de virus de referencia: ftp://ftp.ncbi.nlm.nih.gov/refseq/release/viral/
creo el indice para bowtie:
bowtie2-build REFERENCES/Viral_2.1_Genomic/viral.1.1.genomic.fna REFERENCES/Viral_2.1_Genomic/*
Comparo con mis fastq sin humano:
bowtie2 -x REFERENCES/Viral_2.1_Genomic/all.fna.tar.gz -r ANALYSIS/HOST_REMOVAL/Plasma_HIV/Plasma_HIV_NoHost.fastq -q -S ANALYSIS/VIRUS_RELATED/Plasma_HIV.sam
3262004 reads; of these:                                                                                                                                                                                                                    
  3262004 (100.00%) were unpaired; of these:                                                                                                                                                                                                
    3173818 (97.30%) aligned 0 times                                                                                                                                                                                                        
    81612 (2.50%) aligned exactly 1 time                                                                                                                                                                                                    
    6574 (0.20%) aligned >1 times                                                                                                                                                                                                           
2.70% overall alignment rate
bowtie2 -x REFERENCES/Viral_2.1_Genomic/all.fna.tar.gz -r ANALYSIS/HOST_REMOVAL/Serum_Dengue/Serum_Dengue_NoHost.fastq -q -S ANALYSIS/VIRUS_RELATED/Serum_Dengue.sam                      [16:43:31]
173722 reads; of these:
  173722 (100.00%) were unpaired; of these:
    126249 (72.67%) aligned 0 times
    47395 (27.28%) aligned exactly 1 time
    78 (0.04%) aligned >1 times
27.33% overall alignment rate

14-06-2016
Lanzo el script virus_mapper.sh 
Descargo la base de datos de bacteria 16S:
http://greengenes.secondgenome.com/downloads/database/13_5 -> gg_13_5.fasta.gz (Full release unaligned sequences (no bases dropped))
Saco los gi y los filtro para que sean unicos:
awk {'print $3'} ANALYSIS/VIRUS_RELATED/Plasma_HIV/Plasma_HIV_Virus.fastq | sort -u
Creo la bd de bowtie2 de bacterias 16S:
bowtie2-build REFERENCES/GreenGenes_16S/gg_13_5.fasta REFERENCES/GreenGenes_16S/16S* 
Tengo que convertir el fasta con los readsrelacionados con virus a fastq -> 

15-06-2016
Descargo spades 3.8.1
Una vez mapados los reads con los genomas de referencia de bacterias (16S) y virus sacamos un fasta que contiene sólo aquellos reads que han 
mapado con sus id. Tenemos tres opciones:
a) ensamblar directamente éste archivo con metaspades y con los contig que saque hacer blast
b) sacar un archivo por microorganismo (usando la referencia del mapaje) y ensamblar organismos por separado
c) no ensamblar, directamente usar el mapaje para describir los bichos que hay en la muestra
Empezamos con la opcion a) meto a metaspades directamente los archivos trimados:
spades.py -1 RAW/Plasma_HIV/SRR1106548_1-trimmed-pair1.fastq -2 RAW/Plasma_HIV/SRR1106548_1-trimmed-pair2.fastq --meta -o ANALYSIS/SPADES/Serum_HIV

27-06-2016
- Terminado el script de SPAdes, ahora corre spades y quast en las muestras
- Hold en las muestras de bacteria, tengo que ver cómo analizo las muestras si desde 16S o cómo
- Utilizo la bd de whole genome de virus para crear un multifasta con todas las secuencias (all_virus.fasta) y crear la bd para hacer blast:

Building a new DB, current time: 06/28/2016 12:55:34
New DB name:   viral_blastn
New DB title:  /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/Viral_2.1_Genomic/all_virus.fasta
Sequence type: Nucleotide
Keep Linkouts: T
Keep MBits: T
Maximum file size: 1000000000B
Adding sequences from FASTA; added 5777 sequences in 3.28653 seconds.
$ qrsh -V makeblastdb -in /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/Viral_2.1_Genomic/all_virus.fasta -parse_seqids -dbtype nucl -out viral_blastn
Esto crea varios archivos que usará blast. Muevo los archivos a la carpeta usada por los scripts (REFERENCES/VIRUS_GENOME_REFERENCE).
Ahora voy a correr blast en local con los contigs generados por spades contra los virus de ncbi. 
28-06-2016
- Hago el script de BLASTn 
- tengo que incluir rapsearch y/o blastx 
- Cambio la organizacion de las carpetas de referencia, cada archivo relacionado con una bd en concreto estará dentro de una subcarpeta.
- Creo la bd de proteínas usando las secuencias non-redundant de ncbi (ftp://ftp.ncbi.nlm.nih.gov/refseq/release/viral/)
$ qrsh -V makeblastdb -in /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/Viral_2.1_Genomic/viral.nonredundant_protein.1.protein.faa -parse_seqids -dbtype prot -out viral_blastx
Building a new DB, current time: 06/28/2016 12:53:10
New DB name:   viral_blastx
New DB title:  /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/Viral_2.1_Genomic/viral.nonredundant_protein.1.protein.faa
Sequence type: Protein
Keep Linkouts: T
Keep MBits: T
Maximum file size: 1000000000B
Adding sequences from FASTA; added 192 sequences in 0.0134659 seconds.

29-06-2016
- Termino el script para buscar virus con blastn. Los resultados son correctos, pero hay cosas que mejorar:
  - Sacar los resultados de blastn en formato bonito (y añadir cabecera)
  - hacer blastx de forma correcta: con los reads buscar proteinas (prokka, prodigal...?? buscar sw) y sacar el fasta de los candidatos y con eso hacer blastx o RAPSerach2
  - Por supuesto toda la parte de bacterias y honguitos.

04-07-2016
- Descargada la BD de los genomas completos de bacterias. Creo el multifasta con todas las secuencias:
zcat GCF*/*[0-9]_genomic.fna.gz > /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/BACTERIA_GENOME$1_REFERENCE/WG/Bact_WG_All.fna
Da error por la lista de argumentos demasiado larga. Cambio a:
find . -name '*[0-9]_genomic.fna.gz' -exec zcat {} >> /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/BACTERIA_GENOME_REFERENCE/WG/bact_wg_all.fna \;
- Hago una lista de todas las entradas que hay (por si acaso):
cat /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/BACTERIA_GENOME_REFERENCE/WG/bact_wg_all.fna | grep ">" > /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/BACTERIA_GENOME_REFERENCE/WG/lista_all.txt
- Hago indice de bowtie (esto va a tardar la vida)
qsub -V -b y -j y -cwd -q all.q -N bowtieIndex bowtie2-build /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/BACTERIA_GENOME_REFERENCE/WG/bact_wg_all.fna /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/BACTERIA_GENOME_REFERENCE/WG/bwt2/*

7-07-2016
- Hecha modificación del script de bacteria para que alinee tanto con 16S como con WG
- Descargo la BD de WG de fungi de ensembl. Sólo los toplevel (mejor ensamblaje):
wget -P /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/FUNGI_GENOME_REFERENCE/ -r -np -A "*dna.toplevel.fa.gz" ftp://ftp.ensemblgenomes.org/pub/fungi/release-31/fasta/
- Creo el multifasta (lablog). Quiero incluir el el fasta el nombre del archivo ya que no está el nombre de la especie. Para eso creo un script.
- Lanzo bowtie2 para generar la BD
qsub -V -b y -j y -cwd -q all.q -N bowtieIndex bowtie2-build /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/FUNGI_GENOME_REFERENCE/WG/ITS_all.fna /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/FUNGI_GENOME_REFERENCE/WG/bwt2/fungi_all
11-7-2016
- Bajo DB ITS (ftp://ftp.ncbi.nlm.nih.gov/genomes/TARGET/ITS_rRNA/Fungi/)
- genero index:
qsub -V -b y -j y -cwd -q all.q -N bowtieIndex bowtie2-build /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/FUNGI_GENOME_REFERENCE/ITS/fungi_all.fna /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/FUNGI_GENOME_REFERENCE/WG/bwt2/ITS_all
- Descargo las bases de datos de parasitos (invertebrados y protozoa)


12-7-2016
- Genero el multifasta de parásitos (invert y protozoa)
find Invertebrate/ ! -name '*from_genomic.fna.gz' -name '*_genomic.fna.gz' -exec zcat {} \; > WG/all.fna
find Protozoa/ ! -name '*from_genomic.fna.gz' -name '*_genomic.fna.gz' -exec zcat {} \; > WG/protozoa_wg_all.fna
- Genero el index para bowtie
qsub -V -b y -j y -cwd -q all.q -N bowtieIndex bowtie2-build REFERENCES/INVERTEBRATE_GENOME_REFERENCE/WG/invertebrate_wg_all.fna REFERENCES/INVERTEBRATE_GENOME_REFERENCE/WG/bwt2/invertebrate_all
qsub -V -b y -j y -cwd -q all.q -N bowtieIndex bowtie2-build REFERENCES/PROTOZOO_GENOME_REFERENCE/WG/protozoa_wg_all.fna REFERENCES/PROTOZOO_GENOME_REFERENCE/WG/bwt2/protozoa_all
 En la reunión de ayer se añadieron dos nuevos módulos a desarrollar:
- para WG usar bedtools para calcular cobertura y profundidas y de alguna manera generar una secuencia consenso de los genomas que estén presentes. Posteriormente se debe lanzar metagnnotator con esas secuencias
- Por otro lado con 16S e ITS se lanza srst2 para crear un árbol taxonómico. Hay que generar la base de datos que usará srts2. En principio es un multifasta, pero fay que formatear el 
encabezado con cdhit.En la we de srst2 indican cómo hacerlo:
https://github.com/katholt/srst2#clustering-sequences
Lo primero es generar el archivo clusterizado. Clusteriza las secuencias que se parecen en más de un 90% (param -c 0.9)
/opt/cdhit/cd-hit-est -i 16S_GreenGenes.fasta -o 16S_GreenGenes_Cluster0.90 -d 0 -c 0.9 -M 2047 > lablog
Lo probaré con varios % a ver qué queda:
nohup /opt/cdhit/cd-hit-est -i 16S_GreenGenes.fasta -o 16S_GreenGenes_Cluster0.96 -d 0 -c 0.97 -M 10240 &> lablog096 &

14-7-2016
- Normalizo el código
- Creo la DB de blastn de todas las ref
fqsub makeblastdb -in /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/BACTERIA_GENOME_REFERENCE/WG/bact_wg_all.fna -parse_seqids -dbtype nucl -out /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/BACTERIA_GENOME_REFERENCE/BLAST/blastn/BACTERIA_blastn
fqsub makeblastdb -in /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/FUNGI_GENOME_REFERENCE/WG/fungi_all.fna -parse_seqids -dbtype nucl -out /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/FUNGI_GENOME_REFERENCE/BLAST/blastn/FUNGI_blastn
fqsub makeblastdb -in /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/INVERTEBRATE_GENOME_REFERENCE/WG/invertebrate_wg_all.fna -parse_seqids -dbtype nucl -out /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/INVERTEBRATE_GENOME_REFERENCE/BLAST/blastn/INVERTEBRATE_blastn
fqsub makeblastdb -in /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/PROTOZOA_GENOME_REFERENCE/WG/protozoa_wg_all.fna -parse_seqids -dbtype nucl -out /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/PROTOZOA_GENOME_REFERENCE/BLAST/blastn/PROTOZOA_blastn

- Hay que bajar las BD de proteina de cada organismo y crear la base de datos de blastx:
fqsub makeblastdb -in /processing_Data/bioinformatics/research/20160530_METAGENOMICS_AR_IC_T/REFERENCES/Viral_2.1_Genomic/viral.nonredundant_protein.1.protein.faa -parse_seqids -dbtype prot -out BACTERIA_blastx
- Hay que revisar el script de mapper parasite para dividirlo en protozoa y invert.
15-7-2016
- Terminado el script de mapper parasite
- terminada clusterizacion de 16S 
- paso a generar csv y fasta para srst2 para 0.90 y 0.96:
fqsub python /opt/srst2-0.1.8/database_clustering/cdhit_to_csv.py --cluster_file 16S_GreenGenes_Cluster0.90.clstr --infasta 16S_GreenGenes.fasta --outfile 16S_clustered.csv
fqsub python /opt/srst2-0.1.8/database_clustering/cdhit_to_csv.py --cluster_file 16S_GreenGenes_Cluster0.96.clstr --infasta 16S_GreenGenes.fasta --outfile 16S_clustered096.csv

18-7-2016
- creo el fasta:
fqsub python /opt/srst2-0.1.8/database_clustering/csv_to_gene_db.py -t 16S_clustered.csv -o seqs_clustered_090.fasta -f 16S_GreenGenes.fasta -c 4
fqsub python /opt/srst2-0.1.8/database_clustering/csv_to_gene_db.py -t 16S_clustered096.csv -o seqs_clustered_096.fasta -f 16S_GreenGenes.fasta -c 4

20-7-2016
- Hay que correr cdhit desde 95% hasta 100% y mirar empiricamente cuál es el cutoff que no mezcla nombres. Se debe clusterizar de tal forma que en cada grupo 
sólo haya secuencias con la misma identidad; es decir si el nombre llega hasta sp, se debe haber clusterizado por sp y en ese grupo sólo debe haber secuencias de esa sp.
Si la taxonomia llega a Genero cada grupo sólo puede contener miembros del mismo género (puede haber más de un grupo de mismo género, que correspondería a sp no identificadas)
y así hacia arriba en la taxonomía.
/opt/cdhit/cd-hit-est -i 16S_GreenGenes.fasta -o 16S_GreenGenes_Cluster095 -d 0 -c 0.95 -M 10240 &> lablog095
/opt/cdhit/cd-hit-est -i 16S_GreenGenes.fasta -o 16S_GreenGenes_Cluster097 -d 0 -c 0.97 -M 10240 &> lablog097
/opt/cdhit/cd-hit-est -i 16S_GreenGenes.fasta -o 16S_GreenGenes_Cluster098 -d 0 -c 0.98 -M 10240 &> lablog098
/opt/cdhit/cd-hit-est -i 16S_GreenGenes.fasta -o 16S_GreenGenes_Cluster099 -d 0 -c 0.99 -M 10240 &> lablog099
/opt/cdhit/cd-hit-est -i 16S_GreenGenes.fasta -o 16S_GreenGenes_Cluster100 -d 0 -c 1.00 -M 10240 &> lablog100

27-7-2016
- Recojo las muestras de virus.
- Analizo con mi pipeline la muestra Unai16
- modifico el script:
  - ahora se genera un archivo mas a partir del blast con cutoff min 90% alineamiento y 100 pb de read.
  - se trabaja con el BAM en vez de el SAM en todos los mapajes para poder usar bedtools en el paso siguiente.
- Hay que añadir una rama al pipeline que calcule el coverage y profundidad de cada genoma representado (con bedtools). Así se diferencia entre ortología y presencia real de patógeno.
- Hay que hacer PSI-blast con todas las reads que no mapen contra nada.  
BEDTOOLS
Creo fichero fai para sacar la longitud de cada entrada del fasta. para ello ejecuto:
fqsub samtools faidx REFERENCES/BACTERIA_GENOME_REFERENCE/WG/bact_wg_all.fna
esto saca un archivo .fai con: 
    chromosome name
    chromosome length
    offset of the first base of the chromosome sequence in the file
    length of the fasta lines
    some other length of the fasta lines called "line_blen" in the source code? Appears to typically (for me) be length of fasta line + 1.
Me quedo con las dos primeras columnas que son las que me interesan:
cut -f1-2 REFERENCES/BACTERIA_GENOME_REFERENCE/WG/bact_wg_all.fna.fai > REFERENCES/BACTERIA_GENOME_REFERENCE/WG/genome_length.txt
- Lanzo bedtools:
qsub -V -b y -o ANALYSIS/Unai16/09.BEDTOOLS/unai16_coverage.txt -cwd -q all.q bedtools genomecov -ibam ANALYSIS/Unai16/03.BACTERIA/Unai16_WG_bacteria_mapped.bam -g REFERENCES/BACTERIA_GENOME_REFERENCE/WG/genome_length.txt 

28-7-2016
- Cambio scrpits:
    - ahora funciona con el bam sorteado y genera indice .bai
    - creo el script para generar fastqc de cada fastq una vez trimado
    - modularizo vagancia para lanzar cada parte por separado
- Hay que:
  - lanzar de nuevo bedtools genomecoverage para ver si se siguen duplicando entradas
  - crear script que haga lo de bedtools y añadirlo a los pasos de cada organismo

29-7-2016
- Relanzo bedtools con el bam ordenado para ver si furula
qsub -V -b y -o ANALYSIS/Unai16/09.BEDTOOLS/unai16_coverage.txt -cwd -q all.q bedtools genomecov -ibam ANALYSIS/Unai16/03.BACTERIA/Unai16_WG_bacteria_sorted.bam -g REFERENCES/BACTERIA_GENOME_REFERENCE/WG/genome_length.txt
- Creo los length de las referencias de:
Virus:
fqsub samtools faidx REFERENCES/VIRUS_GENOME_REFERENCE/WG/virus_wg_all.fasta
cut -f1-2 REFERENCES/VIRUS_GENOME_REFERENCE/WG/virus_wg_all.fasta.fai > REFERENCES/VIRUS_GENOME_REFERENCE/WG/genome_length.txt
Fungi:
fqsub samtools faidx REFERENCES/FUNGI_GENOME_REFERENCE/WG/fungi_all.fna
cut -f1-2 REFERENCES/FUNGI_GENOME_REFERENCE/WG/fungi_all.fna.fai > REFERENCES/FUNGI_GENOME_REFERENCE/WG/genome_length.txt
Invertebrate:
fqsub samtools faidx REFERENCES/INVERTEBRATE_GENOME_REFERENCE/WG/invertebrate_wg_all.fna
cut -f1-2 REFERENCES/INVERTEBRATE_GENOME_REFERENCE/WG/invertebrate_wg_all.fna.fai > REFERENCES/INVERTEBRATE_GENOME_REFERENCE/WG/genome_length.txt
Protozoa:
fqsub samtools faidx REFERENCES/PROTOZOA_GENOME_REFERENCE/WG/protozoa_wg_all.fna
cut -f1-2 REFERENCES/PROTOZOA_GENOME_REFERENCE/WG/protozoa_wg_all.fna.fai > REFERENCES/PROTOZOA_GENOME_REFERENCE/WG/genome_length.txt
- Creo script coverage.sh para sacar la cobertura con bedtools
- Añado a los módulos la parte de cobertura
- Falta añadir la cobertura en vagancia


